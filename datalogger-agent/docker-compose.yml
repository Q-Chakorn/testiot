# Docker Compose for DataLogger Agent
# This file sets up the complete DataLogger Agent environment

version: '3.8'

services:
  # TimescaleDB Database
  timescaledb:
    image: timescale/timescaledb:latest-pg14
    container_name: datalogger-timescaledb
    environment:
      POSTGRES_DB: hotel_iot
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
      TIMESCALEDB_TELEMETRY: 'off'
    ports:
      - "5432:5432"
    volumes:
      - timescaledb_data:/var/lib/postgresql/data
      - ./init_db.sql:/docker-entrypoint-initdb.d/01-init_db.sql:ro
      - ./schema.sql:/docker-entrypoint-initdb.d/02-schema.sql:ro
      - ./docker-init-db.sh:/docker-entrypoint-initdb.d/03-init-script.sh:ro
    networks:
      - iot-shared-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d hotel_iot"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s
    restart: unless-stopped
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  # RabbitMQ Message Broker (Use shared instance)
  # This service connects to the shared RabbitMQ instance
  # Comment this section since we'll use external RabbitMQ
  # rabbitmq:
  #   external: true
  #   container_name: shared-rabbitmq

  # DataLogger Agent
  datalogger-agent:
    build:
      context: .
      dockerfile: Dockerfile
      args:
        BUILD_DATE: ${BUILD_DATE:-$(date -u +'%Y-%m-%dT%H:%M:%SZ')}
        VERSION: ${VERSION:-1.0.0}
        VCS_REF: ${VCS_REF:-$(git rev-parse --short HEAD)}
    container_name: datalogger-agent
    environment:
      # Database Configuration
      DATABASE_URL: postgresql://postgres:password@timescaledb:5432/hotel_iot
      
      # RabbitMQ Configuration (Connect to shared RabbitMQ)
      RABBITMQ_HOST: shared-rabbitmq
      RABBITMQ_PORT: 5672
      RABBITMQ_USERNAME: guest
      RABBITMQ_PASSWORD: guest
      RABBITMQ_QUEUE: iaq_data_queue
      RABBITMQ_EXCHANGE: iot_data
      RABBITMQ_ROUTING_KEY: sensor.iaq
      
      # Application Configuration
      BATCH_SIZE: 100
      BATCH_TIMEOUT: 30.0
      VALIDATOR_STRICT_MODE: true
      LOG_LEVEL: INFO
      
      # Python Configuration
      PYTHONUNBUFFERED: 1
      PYTHONDONTWRITEBYTECODE: 1
    volumes:
      - ./logs:/app/logs
      - ./data:/app/data
    networks:
      - iot-shared-network
    depends_on:
      timescaledb:
        condition: service_healthy
    external_links:
      - shared-rabbitmq:shared-rabbitmq
    healthcheck:
      test: ["CMD", "python", "-c", "print('Health check passed')"]
      interval: 30s
      timeout: 15s
      retries: 3
      start_period: 60s
    restart: unless-stopped
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

networks:
  iot-shared-network:
    external: true
    name: iot-shared-network

volumes:
  timescaledb_data:
    name: datalogger-timescaledb-data